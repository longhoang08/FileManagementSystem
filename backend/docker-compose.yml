version: '3.7'
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    restart: on-failure
    env_file:
      - .env
    volumes:
      - ./:/code
    ports:
      - "${APP_PORT}:5000"
    depends_on:
      - mysql
      - elasticsearch
      - worker
      - my_redis_service

  mysql:
    image: mysql:8
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - ./volumes/mysql:/var/lib/mysql
    ports:
      - '${MYSQL_FORWARD_PORT}:3306'

  my_redis_service:
    image: "redis:alpine"
    env_file:
      - .env
    command: 'redis-server --requirepass ${REDIS_PASSWORD}'
    ports:
      - '6379:6379'

  worker:
    image: "celery"
    env_file:
      - .env
    command: celery -A proj file_management.celery.tasks.app -l info
  elasticsearch:
    image: tekodevops/elasticsearch:7.3.1-icu-vni
    container_name: elasticsearch
    environment:
      - cluster.name=search-platform-etl
      - xpack.security.enabled=false
      - transport.host=localhost
      - discovery.type=single-node
      - http.port=9200
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - '9200:9200'
    networks:
      - elastic

  kibana:
    image: docker.elastic.co/kibana/kibana:7.3.1
    container_name: kibana
    environment:
      SERVER_NAME: localhost
      ELASTICSEARCH_URL: http://elasticsearch:9200/
    ports:
      - '5601:5601'
    networks:
      - elastic

volumes:
  esdata:
    driver: local

networks:
  elastic:
    driver: bridge